[gd_scene load_steps=2 format=3 uid="uid://dm05da1q0vsrq"]

[sub_resource type="GDScript" id="1"]
script/source = "extends Node

@warning_ignore(\"unused_signal\")
signal fade_complete

enum fade_type {
	IDLE, 
	BLACK, 
	IN, 
	OUT
}
var state: = fade_type.IDLE: set = set_state

@onready var colorRect: = $Fade_layer/ColorRect

var percent:float = 0: set = set_percent

func set_percent(value:float)->void:
	percent = clamp(value, 0.0, 1.0)
	#Fade logic
	colorRect.modulate.a = percent

func set_state(value:fade_type)->void:
	state = value
	match state:
		fade_type.IN:
			var newTween = get_tree().create_tween()
			newTween.tween_property(colorRect, \"modulate\", Color(0,0,0,0), 0.5)
			newTween.set_trans(Tween.TRANS_LINEAR)
			newTween.set_ease(Tween.EASE_IN)
			newTween.tween_callback(tween_completed)
			newTween.play()
			await newTween.finished
		fade_type.OUT:
			var newTween = get_tree().create_tween()
			newTween.tween_property(colorRect, \"modulate\", Color(0,0,0,1), 0.5)
			newTween.set_trans(Tween.TRANS_LINEAR)
			newTween.set_ease(Tween.EASE_OUT)
			newTween.tween_callback(tween_completed)
			newTween.play()
			await newTween.finished

func _ready()->void:
	colorRect.modulate.a = percent

func tween_completed()->void:
	match state:
		fade_type.IN:
			state = fade_type.IDLE
		fade_type.OUT:
			state = fade_type.BLACK
	emit_signal(\"fade_complete\")
"

[node name="ScreenFade" type="Node"]
process_mode = 3
script = SubResource("1")

[node name="Fade_layer" type="CanvasLayer" parent="."]
layer = 128

[node name="ColorRect" type="ColorRect" parent="Fade_layer"]
modulate = Color(1, 1, 1, 0)
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
color = Color(0, 0, 0, 1)
